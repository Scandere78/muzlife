// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String
  password  String
  avatar    String?
  isEmailVerified Boolean @default(false) // Indique si l'email a √©t√© v√©rifi√©
  emailVerificationToken String?
  emailVerificationExpires DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  quizResults QuizResult[]
  readingProgress ReadingProgress[]
  studySessions StudySession[]
  verseStates VerseState[]
  favoriteSurahs FavoriteSurah[]
  
  // Stats int√©gr√©es
  stats UserStats?
  preferences UserPreferences?
  
  @@map("users")
}

model UserStats {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  userId          String @unique @db.ObjectId
  totalQuizzes    Int    @default(0)
  totalPoints     Int    @default(0)
  averageScore    Float  @default(0)
  favoriteCategory String?
  streakRecord    Int    @default(0)
  
  // Statistiques de lecture
  totalVersesRead Int    @default(0)
  totalVersesMemorized Int @default(0)
  currentSurah    Int?   // Num√©ro de la sourate actuelle
  currentVerse    Int?   // Num√©ro du verset actuel
  readingStreak   Int    @default(0) // Jours cons√©cutifs de lecture
  memorizationStreak Int @default(0) // Jours cons√©cutifs de m√©morisation
  lastReadDate    DateTime?
  lastMemorizedDate DateTime?
  dailyReadingGoal Int @default(10) // Objectif de versets par jour
  dailyMemorizationGoal Int @default(3) // Objectif de m√©morisation par jour
  
  // Statistiques de temps d'√©tude
  totalStudyTime  Int    @default(0) // en minutes
  averageStudySession Int @default(0) // en minutes
  
  // Relation
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_stats")
}

model QuizResult {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @db.ObjectId
  score           Int
  category        String
  difficulty      String
  correctAnswers  Int
  totalQuestions  Int
  percentage      Float
  timeSpent       Int?     // en secondes
  hintsUsed       Int      @default(0)
  createdAt       DateTime @default(now())
  
  // Relation
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("quiz_results")
}

model Category {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String @unique
  description String?
  icon        String?
  color       String?
  isActive    Boolean @default(true)
  createdAt   DateTime @default(now())
  
  @@map("categories")
}

model Question {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  question    String
  options     String[] // Array de strings pour les options
  answer      String
  explanation String
  source      String?
  difficulty  String   @default("normal") // easy, normal, hard
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
    @@unique([category, question])
  @@map("questions")
}

model ReadingProgress {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  surahNumber Int      // Num√©ro de la sourate (1-114)
  verseNumber Int      // Num√©ro du verset dans la sourate
  surahName   String   // Nom de la sourate
  readAt      DateTime @default(now())
  readingTime Int?     // Temps pass√© en secondes
  
  // Relation
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, surahNumber, verseNumber])
  @@map("reading_progress")
}

// √ânum√©ration pour les modes d'√©tude
enum StudyMode {
  READING      // Mode lecture normal
  MEMORIZATION // Mode m√©morisation
  PRONUNCIATION // Mode prononciation
  REVIEW       // Mode r√©vision/test
}

// √âtats d√©taill√©s par verset pour chaque utilisateur
model VerseState {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  surahNumber Int      // Num√©ro de la sourate (1-114)
  verseNumber Int      // Num√©ro du verset dans la sourate
  
  // √âtats du verset
  isRead      Boolean  @default(false)
  isMemorized Boolean  @default(false)
  isFavorite  Boolean  @default(false)
  
  // Progression d√©taill√©e
  readCount       Int      @default(0)     // Nombre de fois lu
  memorizationLevel Int    @default(0)     // Niveau de m√©morisation (0-5)
  lastReadAt      DateTime?
  lastMemorizedAt DateTime?
  
  // Temps d'√©tude par mode
  readingTime      Int @default(0)   // en secondes
  memorizationTime Int @default(0)   // en secondes
  pronunciationTime Int @default(0)  // en secondes
  
  // M√©tadonn√©es
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, surahNumber, verseNumber])
  @@map("verse_states")
}

// Sessions d'√©tude d√©taill√©es
model StudySession {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  surahNumber Int      // Sourate √©tudi√©e
  studyMode   StudyMode // Mode d'√©tude utilis√©
  
  // D√©tails de la session
  startedAt   DateTime @default(now())
  endedAt     DateTime?
  duration    Int?     // en secondes (calcul√© √† la fin)
  
  // Progression de la session
  versesStudied    Int[]    // Liste des num√©ros de versets √©tudi√©s
  versesCompleted  Int[]    // Liste des versets compl√©t√©s/m√©moris√©s
  totalVerses      Int      @default(0)
  completedVerses  Int      @default(0)
  
  // M√©triques de performance
  accuracy         Float?   // Pourcentage de r√©ussite pour les modes test
  focusTime        Int?     // Temps effectif de concentration (hors pauses)
  averageTimePerVerse Int?  // Temps moyen par verset
  
  // Param√®tres audio utilis√©s
  reciterUsed     String?  // Nom du r√©citateur
  playbackSpeed   Float?   // Vitesse de lecture (0.5, 1.0, 1.5, etc.)
  repetitionsPerVerse Int? // Nombre de r√©p√©titions par verset
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("study_sessions")
}

// Pr√©f√©rences utilisateur pour l'exp√©rience d'apprentissage
model UserPreferences {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  
  // Pr√©f√©rences d'affichage
  arabicFontSize      Int     @default(24)    // Taille police arabe
  phoneticFontSize    Int     @default(16)    // Taille police phon√©tique
  translationFontSize Int     @default(14)    // Taille police traduction
  preferredLanguage   String  @default("fr")  // Langue de traduction pr√©f√©r√©e
  
  // Pr√©f√©rences audio
  preferredReciter    String  @default("mishary") // R√©citateur pr√©f√©r√©
  defaultPlaybackSpeed Float  @default(1.0)       // Vitesse de lecture par d√©faut
  autoPlayNext        Boolean @default(false)     // Lecture automatique verset suivant
  repeatCount         Int     @default(1)         // Nombre de r√©p√©titions par d√©faut
  
  // Pr√©f√©rences d'√©tude
  defaultStudyMode    StudyMode @default(READING) // Mode d'√©tude par d√©faut
  showPhonetics       Boolean   @default(true)    // Afficher la phon√©tique
  showTranslation     Boolean   @default(true)    // Afficher la traduction
  enableNotifications Boolean   @default(true)    // Notifications rappel d'√©tude
  
  // Objectifs personnalis√©s
  dailyReadingGoal       Int @default(10)  // Versets √† lire par jour
  dailyMemorizationGoal  Int @default(3)   // Versets √† m√©moriser par jour
  weeklyStudyTimeGoal    Int @default(300) // Minutes d'√©tude par semaine
  
  // Param√®tres de rappel
  reminderTime           String?  // Heure de rappel quotidien (HH:MM)
  studyDaysOfWeek        Int[]    // Jours d'√©tude (0=dimanche, 6=samedi)
  
  // Pr√©f√©rences de localisation
  preferredCountry        String? @default("France")      // Pays pr√©f√©r√©
  preferredCountryCode    String? @default("FR")          // Code pays
  preferredCountryFlag    String? @default("üá´üá∑")         // Drapeau pays
  preferredCity           String? @default("Paris")       // Ville pr√©f√©r√©e
  preferredCityCountry    String? @default("France")      // Pays de la ville
  preferredCityLatitude   Float?  @default(48.8566)       // Latitude ville
  preferredCityLongitude  Float?  @default(2.3522)        // Longitude ville
  preferredCityDisplay    String? @default("Paris, France") // Nom d'affichage ville
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_preferences")
}

// Sourates favorites des utilisateurs
model FavoriteSurah {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  surahNumber Int      // Num√©ro de la sourate (1-114)
  surahName   String   // Nom de la sourate (pour r√©f√©rence)
  surahSlug   String   // Slug de la sourate (pour les URLs)
  addedAt     DateTime @default(now())
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, surahNumber])
  @@map("favorite_surahs")
}

// Messages de contact
model ContactMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String
  email     String
  subject   String
  category  String   // bug, feature, partnership, support, other
  message   String
  isRead    Boolean  @default(false)
  isResolved Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("contact_messages")
}
